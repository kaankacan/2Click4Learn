spring.application.name=2Click4Learn
server.port=${SERVER_PORT:8080}


# PostgreSQL Database Configuration
# Will be read from environment variables. Example: DB_URL, DB_USERNAME, DB_PASSWORD
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/2click4learn_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:your_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
# Can be read from environment variables or set with secure defaults.
# In production, it's recommended to use 'validate' or 'none' (with migration tool).
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:validate}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
# Will be read from environment variables. Example: JWT_SECRET_KEY
app.jwt.secret-key=${JWT_SECRET_KEY}
# Default: 15 minutes
app.jwt.access-token.expiration=${JWT_ACCESS_TOKEN_EXPIRATION:900000}
# Default: 30 days
app.jwt.refresh-token.expiration=${JWT_REFRESH_TOKEN_EXPIRATION:2592000000}

# OpenAI API Configuration
# Will be read from environment variables. Example: OPENAI_API_KEY
openai.api.key=${OPENAI_API_KEY}
openai.api.base-url=https://api.openai.com/v1
openai.api.chat-completions-endpoint=/chat/completions
openai.api.model=${OPENAI_API_MODEL:gpt-4}
openai.api.temperature=${OPENAI_API_TEMPERATURE:0.7}

# Google Cloud Translate API Configuration
# Will be read from environment variables. Example: GOOGLE_TRANSLATE_API_KEY
google.cloud.translate.api-key=${GOOGLE_TRANSLATE_API_KEY}

# Logging configuration
# Can be read from environment variables or set with defaults.
logging.level.com.example._Click4Learn=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_SPRING_WEB:WARN}
logging.level.org.hibernate=${LOG_LEVEL_HIBERNATE:ERROR}

# CORS Configuration
# Will be read from environment variables. Example: CORS_ALLOWED_ORIGINS
# For multiple origins, use a comma-separated string.
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173}
